(function() {var implementors = {
"eventmill":[["impl Freeze for <a class=\"struct\" href=\"eventmill/struct.Generation.html\" title=\"struct eventmill::Generation\">Generation</a>",1,["eventmill::aggregate::Generation"]],["impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"eventmill/struct.VersionedAggregate.html\" title=\"struct eventmill::VersionedAggregate\">VersionedAggregate</a>&lt;S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,</span>",1,["eventmill::aggregate::VersionedAggregate"]],["impl&lt;C, A&gt; Freeze for <a class=\"struct\" href=\"eventmill/struct.DomainCommand.html\" title=\"struct eventmill::DomainCommand\">DomainCommand</a>&lt;C, A&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"eventmill/trait.WithAggregateId.html\" title=\"trait eventmill::WithAggregateId\">WithAggregateId</a>&gt;::<a class=\"associatedtype\" href=\"eventmill/trait.WithAggregateId.html#associatedtype.Id\" title=\"type eventmill::WithAggregateId::Id\">Id</a>: Freeze,</span>",1,["eventmill::command::DomainCommand"]],["impl&lt;R, W, H&gt; Freeze for <a class=\"enum\" href=\"eventmill/dispatch/enum.CoreError.html\" title=\"enum eventmill::dispatch::CoreError\">CoreError</a>&lt;R, W, H&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,</span>",1,["eventmill::dispatch::CoreError"]],["impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"eventmill/dispatch/struct.Core.html\" title=\"struct eventmill::dispatch::Core\">Core</a>&lt;S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,</span>",1,["eventmill::dispatch::Core"]],["impl&lt;E, A, S&gt; Freeze for <a class=\"struct\" href=\"eventmill/dispatch/struct.Eventmill.html\" title=\"struct eventmill::dispatch::Eventmill\">Eventmill</a>&lt;E, A, S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,</span>",1,["eventmill::dispatch::Eventmill"]],["impl Freeze for <a class=\"struct\" href=\"eventmill/struct.Sequence.html\" title=\"struct eventmill::Sequence\">Sequence</a>",1,["eventmill::event::Sequence"]],["impl&lt;E, A&gt; Freeze for <a class=\"struct\" href=\"eventmill/struct.DomainEvent.html\" title=\"struct eventmill::DomainEvent\">DomainEvent</a>&lt;E, A&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"eventmill/trait.WithAggregateId.html\" title=\"trait eventmill::WithAggregateId\">WithAggregateId</a>&gt;::<a class=\"associatedtype\" href=\"eventmill/trait.WithAggregateId.html#associatedtype.Id\" title=\"type eventmill::WithAggregateId::Id\">Id</a>: Freeze,</span>",1,["eventmill::event::DomainEvent"]],["impl&lt;'a, E, A&gt; Freeze for <a class=\"struct\" href=\"eventmill/struct.DomainEventView.html\" title=\"struct eventmill::DomainEventView\">DomainEventView</a>&lt;'a, E, A&gt;",1,["eventmill::event::DomainEventView"]],["impl&lt;E, A&gt; Freeze for <a class=\"struct\" href=\"eventmill/struct.NewEvent.html\" title=\"struct eventmill::NewEvent\">NewEvent</a>&lt;E, A&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"eventmill/trait.WithAggregateId.html\" title=\"trait eventmill::WithAggregateId\">WithAggregateId</a>&gt;::<a class=\"associatedtype\" href=\"eventmill/trait.WithAggregateId.html#associatedtype.Id\" title=\"type eventmill::WithAggregateId::Id\">Id</a>: Freeze,</span>",1,["eventmill::event::NewEvent"]],["impl Freeze for <a class=\"enum\" href=\"eventmill/inmemory_store/enum.Error.html\" title=\"enum eventmill::inmemory_store::Error\">Error</a>",1,["eventmill::inmemory_store::Error"]],["impl&lt;E, A&gt; Freeze for <a class=\"struct\" href=\"eventmill/inmemory_store/struct.InMemoryStore.html\" title=\"struct eventmill::inmemory_store::InMemoryStore\">InMemoryStore</a>&lt;E, A&gt;",1,["eventmill::inmemory_store::InMemoryStore"]],["impl Freeze for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>",1,["eventmill::metadata::Value"]],["impl Freeze for <a class=\"struct\" href=\"eventmill/metadata/struct.Attribute.html\" title=\"struct eventmill::metadata::Attribute\">Attribute</a>",1,["eventmill::metadata::Attribute"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()