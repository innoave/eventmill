(function() {var implementors = {};
implementors["eventmill"] = [{"text":"impl Send for Generation","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for VersionedAggregate&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, A&gt; Send for DomainCommand&lt;C, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as WithAggregateId&gt;::Id: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, A&gt; Send for DomainEvent&lt;E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as WithAggregateId&gt;::Id: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, A&gt; Send for DomainEventView&lt;'a, E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as WithAggregateId&gt;::Id: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, A&gt; Send for NewEvent&lt;E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as WithAggregateId&gt;::Id: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Sequence","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Core&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, W, H&gt; Send for CoreError&lt;R, W, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, A&gt; Send for InMemoryStore&lt;E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as WithAggregateId&gt;::Id: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for Attribute","synthetic":true,"types":[]},{"text":"impl Send for Value","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()