(function() {var implementors = {};
implementors["eventmill"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"eventmill/event/struct.Sequence.html\" title=\"struct eventmill::event::Sequence\">Sequence</a>&gt; for <a class=\"struct\" href=\"eventmill/aggregate/struct.Generation.html\" title=\"struct eventmill::aggregate::Generation\">Generation</a>","synthetic":false,"types":["eventmill::aggregate::Generation"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"eventmill/aggregate/struct.Generation.html\" title=\"struct eventmill::aggregate::Generation\">Generation</a>&gt; for <a class=\"struct\" href=\"eventmill/event/struct.Sequence.html\" title=\"struct eventmill::event::Sequence\">Sequence</a>","synthetic":false,"types":["eventmill::event::Sequence"]},{"text":"impl&lt;E, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>&lt;A as <a class=\"trait\" href=\"eventmill/aggregate/trait.WithAggregateId.html\" title=\"trait eventmill::aggregate::WithAggregateId\">WithAggregateId</a>&gt;::<a class=\"type\" href=\"eventmill/aggregate/trait.WithAggregateId.html#associatedtype.Id\" title=\"type eventmill::aggregate::WithAggregateId::Id\">Id</a>, E<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"eventmill/event/struct.NewEvent.html\" title=\"struct eventmill::event::NewEvent\">NewEvent</a>&lt;E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"eventmill/aggregate/trait.WithAggregateId.html\" title=\"trait eventmill::aggregate::WithAggregateId\">WithAggregateId</a>,&nbsp;</span>","synthetic":false,"types":["eventmill::event::NewEvent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/chrono/latest/chrono/naive/date/struct.NaiveDate.html\" title=\"struct chrono::naive::date::NaiveDate\">NaiveDate</a>&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/chrono/latest/chrono/datetime/struct.DateTime.html\" title=\"struct chrono::datetime::DateTime\">DateTime</a>&lt;<a class=\"struct\" href=\"https://docs.rs/chrono/latest/chrono/offset/utc/struct.Utc.html\" title=\"struct chrono::offset::utc::Utc\">Utc</a>&gt;&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>&gt;&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.RandomState.html\" title=\"struct std::collections::hash::map::RandomState\">RandomState</a>&gt;&gt; for <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a>","synthetic":false,"types":["eventmill::metadata::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"eventmill/metadata/enum.Value.html\" title=\"enum eventmill::metadata::Value\">Value</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"eventmill/metadata/struct.Attribute.html\" title=\"struct eventmill::metadata::Attribute\">Attribute</a>","synthetic":false,"types":["eventmill::metadata::Attribute"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()